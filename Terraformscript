pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', changelog: false, poll: false, url: 'https://github.com/Siruvani-Github/Samplerepo.git'
            }
        }

        stage('Terraform Apply') {
            steps {
                withAWS(credentials: 'AWS-Pipeline', region: 'ap-south-1') {
                              
                bat '''dir
                C:/Software/Terraform/terraform.exe init
                C:/Software/Terraform/terraform.exe destroy -auto-approve
              //  C:/Software/Terraform/terraform.exe apply -var instance_type=%instancetype% -auto-approve 
                C:/Software/Terraform/terraform.exe output > instance_details.txt

               
                '''
               
                                }
            }
        }
    }

    post {
         always {
             echo 'This will always run'
         }
         success {
             echo ' Terraform Script executed and Instance created'
              // mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL} <br>Instanceid: ${instance_ip} ", charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "Sucess CI: Project name -> ${env.JOB_NAME}", to: "ks.sendhil@gmail.com";
                emailext attachLog: true, attachmentsPattern: 'instance_details.txt',
                body: "${currentBuild.currentResult}: Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}",
                to:"ks.sendhil@gmail.com",subject: "Jenkins Build ${currentBuild.currentResult}: Job ${env.JOB_NAME}"
             
         }
         failure {
             echo 'Pipe Line Failed'
             // Sending an email notification with details about the failure
             mail bcc: '', body: "<b>Example</b><br>Project: ${env.JOB_NAME} <br>Build Number: ${env.BUILD_NUMBER} <br> URL de build: ${env.BUILD_URL}", charset: 'UTF-8', from: '', mimeType: 'text/html', replyTo: '', subject: "ERROR CI: Project name -> ${env.JOB_NAME}", to: "ks.sendhil@gmail.com";
         }
         unstable {
             echo 'This will run only if the run was marked as unstable'
         }
     }
    /*post {
        always {
            // Clean up or additional steps
            sh 'terraform destroy -auto-approve'
        }
    }*/ 
}
